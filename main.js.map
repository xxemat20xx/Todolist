{"version":3,"file":"main.js","mappings":"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","sources":["webpack://odin-todolist/./node_modules/boxicons/dist/boxicons.js","webpack://odin-todolist/./src/styles.css","webpack://odin-todolist/./node_modules/css-loader/dist/runtime/api.js","webpack://odin-todolist/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://odin-todolist/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://odin-todolist/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://odin-todolist/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://odin-todolist/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://odin-todolist/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://odin-todolist/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://odin-todolist/webpack/bootstrap","webpack://odin-todolist/webpack/runtime/compat get default export","webpack://odin-todolist/webpack/runtime/define property getters","webpack://odin-todolist/webpack/runtime/hasOwnProperty shorthand","webpack://odin-todolist/webpack/runtime/nonce","webpack://odin-todolist/./src/styles.css?44b2","webpack://odin-todolist/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://odin-todolist/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://odin-todolist/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://odin-todolist/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://odin-todolist/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://odin-todolist/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://odin-todolist/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://odin-todolist/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://odin-todolist/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://odin-todolist/./node_modules/date-fns/locale/en-US.js","webpack://odin-todolist/./node_modules/date-fns/_lib/defaultOptions.js","webpack://odin-todolist/./node_modules/date-fns/constants.js","webpack://odin-todolist/./node_modules/date-fns/constructFrom.js","webpack://odin-todolist/./node_modules/date-fns/toDate.js","webpack://odin-todolist/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://odin-todolist/./node_modules/date-fns/_lib/normalizeDates.js","webpack://odin-todolist/./node_modules/date-fns/startOfDay.js","webpack://odin-todolist/./node_modules/date-fns/getDayOfYear.js","webpack://odin-todolist/./node_modules/date-fns/differenceInCalendarDays.js","webpack://odin-todolist/./node_modules/date-fns/startOfYear.js","webpack://odin-todolist/./node_modules/date-fns/startOfWeek.js","webpack://odin-todolist/./node_modules/date-fns/startOfISOWeek.js","webpack://odin-todolist/./node_modules/date-fns/getISOWeekYear.js","webpack://odin-todolist/./node_modules/date-fns/getISOWeek.js","webpack://odin-todolist/./node_modules/date-fns/startOfISOWeekYear.js","webpack://odin-todolist/./node_modules/date-fns/getWeekYear.js","webpack://odin-todolist/./node_modules/date-fns/getWeek.js","webpack://odin-todolist/./node_modules/date-fns/startOfWeekYear.js","webpack://odin-todolist/./node_modules/date-fns/_lib/addLeadingZeros.js","webpack://odin-todolist/./node_modules/date-fns/_lib/format/lightFormatters.js","webpack://odin-todolist/./node_modules/date-fns/_lib/format/formatters.js","webpack://odin-todolist/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://odin-todolist/./node_modules/date-fns/_lib/protectedTokens.js","webpack://odin-todolist/./node_modules/date-fns/isValid.js","webpack://odin-todolist/./node_modules/date-fns/isDate.js","webpack://odin-todolist/./node_modules/date-fns/format.js","webpack://odin-todolist/./node_modules/date-fns/isToday.js","webpack://odin-todolist/./node_modules/date-fns/isSameDay.js","webpack://odin-todolist/./node_modules/date-fns/constructNow.js","webpack://odin-todolist/./node_modules/date-fns/endOfWeek.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/Setter.js","webpack://odin-todolist/./node_modules/date-fns/transpose.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/Parser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/constants.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/utils.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/DateParser.js","webpack://odin-todolist/./node_modules/date-fns/addDays.js","webpack://odin-todolist/./node_modules/date-fns/setDay.js","webpack://odin-todolist/./node_modules/date-fns/setISODay.js","webpack://odin-todolist/./node_modules/date-fns/getISODay.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/EraParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/YearParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/QuarterParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/MonthParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js","webpack://odin-todolist/./node_modules/date-fns/setWeek.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js","webpack://odin-todolist/./node_modules/date-fns/setISOWeek.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/DayParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/ISODayParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/AMPMParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/MinuteParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/SecondParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js","webpack://odin-todolist/./node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js","webpack://odin-todolist/./node_modules/date-fns/parse.js","webpack://odin-todolist/./node_modules/date-fns/getDefaultOptions.js","webpack://odin-todolist/./src/modules/taskManager/tasks.js","webpack://odin-todolist/./src/modules/projectManager/project.js"],"sourcesContent":["!function(t,e,n,r,o){if(\"customElements\"in n)o();else{if(n.AWAITING_WEB_COMPONENTS_POLYFILL)return void n.AWAITING_WEB_COMPONENTS_POLYFILL.then(o);var a=n.AWAITING_WEB_COMPONENTS_POLYFILL=f();a.then(o);var i=n.WEB_COMPONENTS_POLYFILL||\"//cdnjs.cloudflare.com/ajax/libs/webcomponentsjs/2.0.2/webcomponents-bundle.js\",s=n.ES6_CORE_POLYFILL||\"//cdnjs.cloudflare.com/ajax/libs/core-js/2.5.3/core.min.js\";\"Promise\"in n?c(i).then((function(){a.isDone=!0,a.exec()})):c(s).then((function(){c(i).then((function(){a.isDone=!0,a.exec()}))}))}function f(){var t=[];return t.isDone=!1,t.exec=function(){t.splice(0).forEach((function(t){t()}))},t.then=function(e){return t.isDone?e():t.push(e),t},t}function c(t){var e=f(),n=r.createElement(\"script\");return n.type=\"text/javascript\",n.readyState?n.onreadystatechange=function(){\"loaded\"!=n.readyState&&\"complete\"!=n.readyState||(n.onreadystatechange=null,e.isDone=!0,e.exec())}:n.onload=function(){e.isDone=!0,e.exec()},n.src=t,r.getElementsByTagName(\"head\")[0].appendChild(n),n.then=e.then,n}}(0,0,window,document,(function(){var t,e;t=window,e=function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=5)}([function(t,e){t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=function(t,e){var n,r=t[1]||\"\",o=t[3];if(!o)return r;if(e&&\"function\"==typeof btoa){var a=(n=o,\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+\" */\"),i=o.sources.map((function(t){return\"/*# sourceURL=\"+o.sourceRoot+t+\" */\"}));return[r].concat(i).concat([a]).join(\"\\n\")}return[r].join(\"\\n\")}(e,t);return e[2]?\"@media \"+e[2]+\"{\"+n+\"}\":n})).join(\"\")},e.i=function(t,n){\"string\"==typeof t&&(t=[[null,t,\"\"]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];\"number\"==typeof a&&(r[a]=!0)}for(o=0;o<t.length;o++){var i=t[o];\"number\"==typeof i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]=\"(\"+i[2]+\") and (\"+n+\")\"),e.push(i))}},e}},function(t,e,n){var r=n(3);t.exports=\"string\"==typeof r?r:r.toString()},function(t,e,n){var r=n(4);t.exports=\"string\"==typeof r?r:r.toString()},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,\"@-webkit-keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@-webkit-keyframes burst{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}90%{-webkit-transform:scale(1.5);transform:scale(1.5);opacity:0}}@keyframes burst{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}90%{-webkit-transform:scale(1.5);transform:scale(1.5);opacity:0}}@-webkit-keyframes flashing{0%{opacity:1}45%{opacity:0}90%{opacity:1}}@keyframes flashing{0%{opacity:1}45%{opacity:0}90%{opacity:1}}@-webkit-keyframes fade-left{0%{-webkit-transform:translateX(0);transform:translateX(0);opacity:1}75%{-webkit-transform:translateX(-20px);transform:translateX(-20px);opacity:0}}@keyframes fade-left{0%{-webkit-transform:translateX(0);transform:translateX(0);opacity:1}75%{-webkit-transform:translateX(-20px);transform:translateX(-20px);opacity:0}}@-webkit-keyframes fade-right{0%{-webkit-transform:translateX(0);transform:translateX(0);opacity:1}75%{-webkit-transform:translateX(20px);transform:translateX(20px);opacity:0}}@keyframes fade-right{0%{-webkit-transform:translateX(0);transform:translateX(0);opacity:1}75%{-webkit-transform:translateX(20px);transform:translateX(20px);opacity:0}}@-webkit-keyframes fade-up{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}75%{-webkit-transform:translateY(-20px);transform:translateY(-20px);opacity:0}}@keyframes fade-up{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}75%{-webkit-transform:translateY(-20px);transform:translateY(-20px);opacity:0}}@-webkit-keyframes fade-down{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}75%{-webkit-transform:translateY(20px);transform:translateY(20px);opacity:0}}@keyframes fade-down{0%{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}75%{-webkit-transform:translateY(20px);transform:translateY(20px);opacity:0}}@-webkit-keyframes tada{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}10%,20%{-webkit-transform:scale3d(.95,.95,.95) rotate(-10deg);transform:scale3d(.95,.95,.95) rotate(-10deg)}30%,50%,70%,90%{-webkit-transform:scaleX(1) rotate(10deg);transform:scaleX(1) rotate(10deg)}40%,60%,80%{-webkit-transform:scaleX(1) rotate(-10deg);transform:scaleX(1) rotate(-10deg)}to{-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes tada{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}10%,20%{-webkit-transform:scale3d(.95,.95,.95) rotate(-10deg);transform:scale3d(.95,.95,.95) rotate(-10deg)}30%,50%,70%,90%{-webkit-transform:scaleX(1) rotate(10deg);transform:scaleX(1) rotate(10deg)}40%,60%,80%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}to{-webkit-transform:scaleX(1);transform:scaleX(1)}}.bx-spin,.bx-spin-hover:hover{-webkit-animation:spin 2s linear infinite;animation:spin 2s linear infinite}.bx-tada,.bx-tada-hover:hover{-webkit-animation:tada 1.5s ease infinite;animation:tada 1.5s ease infinite}.bx-flashing,.bx-flashing-hover:hover{-webkit-animation:flashing 1.5s infinite linear;animation:flashing 1.5s infinite linear}.bx-burst,.bx-burst-hover:hover{-webkit-animation:burst 1.5s infinite linear;animation:burst 1.5s infinite linear}.bx-fade-up,.bx-fade-up-hover:hover{-webkit-animation:fade-up 1.5s infinite linear;animation:fade-up 1.5s infinite linear}.bx-fade-down,.bx-fade-down-hover:hover{-webkit-animation:fade-down 1.5s infinite linear;animation:fade-down 1.5s infinite linear}.bx-fade-left,.bx-fade-left-hover:hover{-webkit-animation:fade-left 1.5s infinite linear;animation:fade-left 1.5s infinite linear}.bx-fade-right,.bx-fade-right-hover:hover{-webkit-animation:fade-right 1.5s infinite linear;animation:fade-right 1.5s infinite linear}\",\"\"])},function(t,e,n){(t.exports=n(0)(!1)).push([t.i,'.bx-rotate-90{transform:rotate(90deg);-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\"}.bx-rotate-180{transform:rotate(180deg);-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\"}.bx-rotate-270{transform:rotate(270deg);-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\"}.bx-flip-horizontal{transform:scaleX(-1);-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\"}.bx-flip-vertical{transform:scaleY(-1);-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\"}',\"\"])},function(t,e,n){\"use strict\";n.r(e),n.d(e,\"BoxIconElement\",(function(){return g}));var r,o,a,i,s=n(1),f=n.n(s),c=n(2),l=n.n(c),m=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},u=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),d=(o=(r=Object).getPrototypeOf||function(t){return t.__proto__},a=r.setPrototypeOf||function(t,e){return t.__proto__=e,t},i=\"object\"===(\"undefined\"==typeof Reflect?\"undefined\":m(Reflect))?Reflect.construct:function(t,e,n){var r,o=[null];return o.push.apply(o,e),r=t.bind.apply(t,o),a(new r,n.prototype)},function(t){var e=o(t);return a(t,a((function(){return i(e,arguments,o(this).constructor)}),e))}),p=window,b={},y=document.createElement(\"template\"),h=function(){return!!p.ShadyCSS};y.innerHTML='\\n<style>\\n:host {\\n  display: inline-block;\\n  font-size: initial;\\n  box-sizing: border-box;\\n  width: 24px;\\n  height: 24px;\\n}\\n:host([size=xs]) {\\n    width: 0.8rem;\\n    height: 0.8rem;\\n}\\n:host([size=sm]) {\\n    width: 1.55rem;\\n    height: 1.55rem;\\n}\\n:host([size=md]) {\\n    width: 2.25rem;\\n    height: 2.25rem;\\n}\\n:host([size=lg]) {\\n    width: 3.0rem;\\n    height: 3.0rem;\\n}\\n\\n:host([size]:not([size=\"\"]):not([size=xs]):not([size=sm]):not([size=md]):not([size=lg])) {\\n    width: auto;\\n    height: auto;\\n}\\n:host([pull=left]) #icon {\\n    float: left;\\n    margin-right: .3em!important;\\n}\\n:host([pull=right]) #icon {\\n    float: right;\\n    margin-left: .3em!important;\\n}\\n:host([border=square]) #icon {\\n    padding: .25em;\\n    border: .07em solid rgba(0,0,0,.1);\\n    border-radius: .25em;\\n}\\n:host([border=circle]) #icon {\\n    padding: .25em;\\n    border: .07em solid rgba(0,0,0,.1);\\n    border-radius: 50%;\\n}\\n#icon,\\nsvg {\\n  width: 100%;\\n  height: 100%;\\n}\\n#icon {\\n    box-sizing: border-box;\\n} \\n'+f.a+\"\\n\"+l.a+'\\n</style>\\n<div id=\"icon\"></div>';var g=d(function(t){function e(){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,e);var t=function(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return t.$ui=t.attachShadow({mode:\"open\"}),t.$ui.appendChild(t.ownerDocument.importNode(y.content,!0)),h()&&p.ShadyCSS.styleElement(t),t._state={$iconHolder:t.$ui.getElementById(\"icon\"),type:t.getAttribute(\"type\")},t}return function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,HTMLElement),u(e,null,[{key:\"getIconSvg\",value:function(t,e){var n=this.cdnUrl+\"/regular/bx-\"+t+\".svg\";return\"solid\"===e?n=this.cdnUrl+\"/solid/bxs-\"+t+\".svg\":\"logo\"===e&&(n=this.cdnUrl+\"/logos/bxl-\"+t+\".svg\"),n&&b[n]||(b[n]=new Promise((function(t,e){var r=new XMLHttpRequest;r.addEventListener(\"load\",(function(){this.status<200||this.status>=300?e(new Error(this.status+\" \"+this.responseText)):t(this.responseText)})),r.onerror=e,r.onabort=e,r.open(\"GET\",n),r.send()}))),b[n]}},{key:\"define\",value:function(t){t=t||this.tagName,h()&&p.ShadyCSS.prepareTemplate(y,t),customElements.define(t,this)}},{key:\"cdnUrl\",get:function(){return\"//unpkg.com/boxicons@2.1.4/svg\"}},{key:\"tagName\",get:function(){return\"box-icon\"}},{key:\"observedAttributes\",get:function(){return[\"type\",\"name\",\"color\",\"size\",\"rotate\",\"flip\",\"animation\",\"border\",\"pull\"]}}]),u(e,[{key:\"attributeChangedCallback\",value:function(t,e,n){var r=this._state.$iconHolder;switch(t){case\"type\":!function(t,e,n){var r=t._state;r.$iconHolder.textContent=\"\",r.type&&(r.type=null),r.type=!n||\"solid\"!==n&&\"logo\"!==n?\"regular\":n,void 0!==r.currentName&&t.constructor.getIconSvg(r.currentName,r.type).then((function(t){r.type===n&&(r.$iconHolder.innerHTML=t)})).catch((function(t){console.error(\"Failed to load icon: \"+r.currentName+\"\\n\"+t)}))}(this,0,n);break;case\"name\":!function(t,e,n){var r=t._state;r.currentName=n,r.$iconHolder.textContent=\"\",n&&void 0!==r.type&&t.constructor.getIconSvg(n,r.type).then((function(t){r.currentName===n&&(r.$iconHolder.innerHTML=t)})).catch((function(t){console.error(\"Failed to load icon: \"+n+\"\\n\"+t)}))}(this,0,n);break;case\"color\":r.style.fill=n||\"\";break;case\"size\":!function(t,e,n){var r=t._state;r.size&&(r.$iconHolder.style.width=r.$iconHolder.style.height=\"\",r.size=r.sizeType=null),n&&!/^(xs|sm|md|lg)$/.test(r.size)&&(r.size=n.trim(),r.$iconHolder.style.width=r.$iconHolder.style.height=r.size)}(this,0,n);break;case\"rotate\":e&&r.classList.remove(\"bx-rotate-\"+e),n&&r.classList.add(\"bx-rotate-\"+n);break;case\"flip\":e&&r.classList.remove(\"bx-flip-\"+e),n&&r.classList.add(\"bx-flip-\"+n);break;case\"animation\":e&&r.classList.remove(\"bx-\"+e),n&&r.classList.add(\"bx-\"+n)}}},{key:\"connectedCallback\",value:function(){h()&&p.ShadyCSS.styleElement(this)}}]),e}());e.default=g,g.define()}])},\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.BoxIconElement=e():t.BoxIconElement=e()}));\n//# sourceMappingURL=boxicons.js.map","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Parkinsans:wght@300..800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: \"Parkinsans\", sans-serif;\n  font-optical-sizing: auto;\n  font-weight: 400;\n  display: flex;\n  min-height: 100vh;\n  background-color: #EEEEEE;\n}\n\np {\n  text-transform: capitalize;\n}\n\nstrong {\n  color: #E84545;\n  font-size: 18px;\n}\n\nspan {\n  font-size: 14px;\n\n}\n\nsub {\n  font-size: 14px;\n  font-style: italic;\n  color: #575757;\n  cursor: pointer;\n}\n\nsub:hover {\n  color: #333;\n}\n\n.taskCompleted {\n  text-decoration: line-through;\n}\n\nbutton {\n  padding: 10px 15px;\n  background-color: transparent;\n  border: none;\n  color: #00ADB5;\n  cursor: pointer;\n}\n\nbutton:hover {\n  color: #028e96;\n}\n\n/* Side Navigation Styles */\n.side-nav {\n  width: 350px;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: #222831;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.side-nav-header {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding: 20px;\n  color: #EEEEEE;\n  /* border-radius: 10em; */\n}\n\n.side-nav img {\n  width: 80px;\n}\n\n.side-nav-btn {\n  padding: 15px;\n  color: #EEEEEE;\n  background-color: #222831;\n  border: none;\n  text-align: left;\n  font-size: 14px;\n  width: 100%;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n}\n\n.side-nav-footer {\n  text-align: right;\n  margin: 2em;\n}\n\n.side-nav-footer img {\n  width: 30px;\n  cursor: pointer;\n}\n\n.side-nav-btn i {\n  margin-right: 10px;\n  font-size: 1.5em;\n  color: #00ADB5;\n}\n\n.side-nav-btn:hover {\n  background-color: #575757;\n}\n#project-popupBtn{\n  padding: 10px 0px;\n  background-color: transparent;\n  font-size: 1em;\n}\n#project-popupBtn:hover{\ncolor: #f44336;\n}\n#project-popupBtn span{\n  color: #f44336;\n  font-size: 1.3em;\n  margin-right: 14px;\n  font-weight: 800;\n  \n}\n#project-title i{\n  margin-right: 1em;\n  color: #f44336;\n}\n#deleteProjectBtn{\n  color: #f44336;\n}\n/*  */\n.project-popup-container {\n  display: none;\n}\n\n.project-buttons {\n  text-align: right;\n}\n\n.project-buttons button {\n  color: #f44336;\n  padding: 8px;\n  border-radius: 2em;\n  font-size: 1.2em;\n}\n\n.project-buttons button:hover {\n  color: #f85a5a;\n}\n\n.project-lists {\n  display: flex;\n  margin: 20px 0;\n  flex-direction: column;\n}\n\n.project-list {\n  display: flex;\n  justify-content: space-between;\n\n}\n\n#projectNav {\n  color: #f4f4f4;\n  padding: 15px;\n}\n\n#project-title {\n  cursor: pointer;\n}\n\n#project-title:hover {\n  color: #9b9b9b;\n}\n\n/* Task List Styles */\nul {\n  list-style-type: none;\n}\n\nli {\n  background-color: white;\n  padding: 15px;\n  margin: 5px 0;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n/* MAIN CONTENT */\n.main-content {\n  margin-left: 350px;\n  padding: 20px;\n  width: 100%;\n}\n\n.main-content-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n}\n\n.main-img-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n}\n\n.header-logo-text {\n  display: flex;\n  align-items: center;\n  margin: 0 1em;\n  flex-direction: column;\n}\n\n.main-content-header-content img {\n  width: 4em;\n  background-color: #00ADB5;\n  border-radius: 50%;\n  padding: 10px;\n  margin: 1em;\n}\n\nh1 {\n  margin-bottom: 20px;\n}\n\n.button-task-container {\n  text-align: right;\n}\n\n#addTaskBtn {\n  background-color: #00ADB5;\n  color: #EEEEEE;\n  border-radius: 2em;\n  margin: 1em 0;\n}\n\n#addTaskBtn:hover {\n  background-color: #028e96;\n\n}\n\n/* Modal Styles */\n.modal {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  width: 400px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n}\n\n/* Form Styles */\ninput[type=\"text\"],\ntextarea,\ninput[type=\"date\"] {\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n\n}\n\n#title, \n#dueDate{\n  width: 100%;\n  padding: 15px 10px;\n}\ntextarea {\n  resize: none;\n  height: 12em;\n}\n\n.form-buttons {\n  text-align: right;\n}\n\n.form-buttons button {\n  border-radius: 2em;\n}\n\n#taskBtn {\n  background-color: #00ADB5;\n  color: #EEEEEE;\n}\n\n#taskBtn:hover {\n  background-color: #028e96;\n}\n\n#closeModalBtn:hover {\n  background-color: #b62b2b;\n}\n\n/* PROJECT F*/\n#projectInput {\n  width: 100%;\n  border: #f44336 solid 1px;\n  background-color: transparent;\n  padding: 1em;\n  color: #EEEEEE;\n}\n\n#projectInput::placeholder {\n  color: #EEEEEE;\n}\n\n/* Close Modal Button */\nbutton[type=\"button\"] {\n  background-color: #f44336;\n  color: white;\n}\n\n/* message notification */\n.message-notif-content {\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  margin: 2em 0;\n  width: 350px;\n  display: flex;\n  flex-direction: column-reverse;\n\n}\n\n.msg-notif-text {\n  padding: 10px 25px;\n  color: #EEEEEE;\n  margin: 1em 0;\n}\n\n.msg-notif-text.added-task-msg {\n  background-color: #00ADB5;\n}\n\n.msg-notif-text.updated-task-msg {\n  background-color: #a7c957;\n}\n\n.msg-notif-text.deleted-task-msg {\n  background-color: #f44336;\n}\n\n\n/* note */`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@import url('https://fonts.googleapis.com/css2?family=Parkinsans:wght@300..800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\\n\\n* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n}\\n\\nbody {\\n  font-family: \\\"Parkinsans\\\", sans-serif;\\n  font-optical-sizing: auto;\\n  font-weight: 400;\\n  display: flex;\\n  min-height: 100vh;\\n  background-color: #EEEEEE;\\n}\\n\\np {\\n  text-transform: capitalize;\\n}\\n\\nstrong {\\n  color: #E84545;\\n  font-size: 18px;\\n}\\n\\nspan {\\n  font-size: 14px;\\n\\n}\\n\\nsub {\\n  font-size: 14px;\\n  font-style: italic;\\n  color: #575757;\\n  cursor: pointer;\\n}\\n\\nsub:hover {\\n  color: #333;\\n}\\n\\n.taskCompleted {\\n  text-decoration: line-through;\\n}\\n\\nbutton {\\n  padding: 10px 15px;\\n  background-color: transparent;\\n  border: none;\\n  color: #00ADB5;\\n  cursor: pointer;\\n}\\n\\nbutton:hover {\\n  color: #028e96;\\n}\\n\\n/* Side Navigation Styles */\\n.side-nav {\\n  width: 350px;\\n  height: 100%;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  background-color: #222831;\\n  padding: 20px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n}\\n\\n.side-nav-header {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n  padding: 20px;\\n  color: #EEEEEE;\\n  /* border-radius: 10em; */\\n}\\n\\n.side-nav img {\\n  width: 80px;\\n}\\n\\n.side-nav-btn {\\n  padding: 15px;\\n  color: #EEEEEE;\\n  background-color: #222831;\\n  border: none;\\n  text-align: left;\\n  font-size: 14px;\\n  width: 100%;\\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n\\n}\\n\\n.side-nav-footer {\\n  text-align: right;\\n  margin: 2em;\\n}\\n\\n.side-nav-footer img {\\n  width: 30px;\\n  cursor: pointer;\\n}\\n\\n.side-nav-btn i {\\n  margin-right: 10px;\\n  font-size: 1.5em;\\n  color: #00ADB5;\\n}\\n\\n.side-nav-btn:hover {\\n  background-color: #575757;\\n}\\n#project-popupBtn{\\n  padding: 10px 0px;\\n  background-color: transparent;\\n  font-size: 1em;\\n}\\n#project-popupBtn:hover{\\ncolor: #f44336;\\n}\\n#project-popupBtn span{\\n  color: #f44336;\\n  font-size: 1.3em;\\n  margin-right: 14px;\\n  font-weight: 800;\\n  \\n}\\n#project-title i{\\n  margin-right: 1em;\\n  color: #f44336;\\n}\\n#deleteProjectBtn{\\n  color: #f44336;\\n}\\n/*  */\\n.project-popup-container {\\n  display: none;\\n}\\n\\n.project-buttons {\\n  text-align: right;\\n}\\n\\n.project-buttons button {\\n  color: #f44336;\\n  padding: 8px;\\n  border-radius: 2em;\\n  font-size: 1.2em;\\n}\\n\\n.project-buttons button:hover {\\n  color: #f85a5a;\\n}\\n\\n.project-lists {\\n  display: flex;\\n  margin: 20px 0;\\n  flex-direction: column;\\n}\\n\\n.project-list {\\n  display: flex;\\n  justify-content: space-between;\\n\\n}\\n\\n#projectNav {\\n  color: #f4f4f4;\\n  padding: 15px;\\n}\\n\\n#project-title {\\n  cursor: pointer;\\n}\\n\\n#project-title:hover {\\n  color: #9b9b9b;\\n}\\n\\n/* Task List Styles */\\nul {\\n  list-style-type: none;\\n}\\n\\nli {\\n  background-color: white;\\n  padding: 15px;\\n  margin: 5px 0;\\n  border-radius: 5px;\\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\\n}\\n\\n/* MAIN CONTENT */\\n.main-content {\\n  margin-left: 350px;\\n  padding: 20px;\\n  width: 100%;\\n}\\n\\n.main-content-header {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 15px;\\n}\\n\\n.main-img-container {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\\n}\\n\\n.header-logo-text {\\n  display: flex;\\n  align-items: center;\\n  margin: 0 1em;\\n  flex-direction: column;\\n}\\n\\n.main-content-header-content img {\\n  width: 4em;\\n  background-color: #00ADB5;\\n  border-radius: 50%;\\n  padding: 10px;\\n  margin: 1em;\\n}\\n\\nh1 {\\n  margin-bottom: 20px;\\n}\\n\\n.button-task-container {\\n  text-align: right;\\n}\\n\\n#addTaskBtn {\\n  background-color: #00ADB5;\\n  color: #EEEEEE;\\n  border-radius: 2em;\\n  margin: 1em 0;\\n}\\n\\n#addTaskBtn:hover {\\n  background-color: #028e96;\\n\\n}\\n\\n/* Modal Styles */\\n.modal {\\n  display: none;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(0, 0, 0, 0.5);\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.modal-content {\\n  background-color: white;\\n  padding: 20px;\\n  border-radius: 10px;\\n  width: 400px;\\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\\n}\\n\\n/* Form Styles */\\ninput[type=\\\"text\\\"],\\ntextarea,\\ninput[type=\\\"date\\\"] {\\n  width: 100%;\\n  padding: 10px;\\n  margin: 10px 0;\\n  border: 1px solid #ddd;\\n  border-radius: 5px;\\n\\n}\\n\\n#title, \\n#dueDate{\\n  width: 100%;\\n  padding: 15px 10px;\\n}\\ntextarea {\\n  resize: none;\\n  height: 12em;\\n}\\n\\n.form-buttons {\\n  text-align: right;\\n}\\n\\n.form-buttons button {\\n  border-radius: 2em;\\n}\\n\\n#taskBtn {\\n  background-color: #00ADB5;\\n  color: #EEEEEE;\\n}\\n\\n#taskBtn:hover {\\n  background-color: #028e96;\\n}\\n\\n#closeModalBtn:hover {\\n  background-color: #b62b2b;\\n}\\n\\n/* PROJECT F*/\\n#projectInput {\\n  width: 100%;\\n  border: #f44336 solid 1px;\\n  background-color: transparent;\\n  padding: 1em;\\n  color: #EEEEEE;\\n}\\n\\n#projectInput::placeholder {\\n  color: #EEEEEE;\\n}\\n\\n/* Close Modal Button */\\nbutton[type=\\\"button\\\"] {\\n  background-color: #f44336;\\n  color: white;\\n}\\n\\n/* message notification */\\n.message-notif-content {\\n  position: fixed;\\n  bottom: 0;\\n  right: 0;\\n  margin: 2em 0;\\n  width: 350px;\\n  display: flex;\\n  flex-direction: column-reverse;\\n\\n}\\n\\n.msg-notif-text {\\n  padding: 10px 25px;\\n  color: #EEEEEE;\\n  margin: 1em 0;\\n}\\n\\n.msg-notif-text.added-task-msg {\\n  background-color: #00ADB5;\\n}\\n\\n.msg-notif-text.updated-task-msg {\\n  background-color: #a7c957;\\n}\\n\\n.msg-notif-text.deleted-task-msg {\\n  background-color: #f44336;\\n}\\n\\n\\n/* note */\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { constructNow } from \"./constructNow.js\";\nimport { isSameDay } from \"./isSameDay.js\";\n\n/**\n * The {@link isToday} function options.\n */\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport function isToday(date, options) {\n  return isSameDay(\n    constructFrom(options?.in || date, date),\n    constructNow(options?.in || date),\n  );\n}\n\n// Fallback for modularized imports:\nexport default isToday;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link isSameDay} function options.\n */\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(laterDate, earlierDate, options) {\n  const [dateLeft_, dateRight_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return +startOfDay(dateLeft_) === +startOfDay(dateRight_);\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateArg<DateType>,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nexport function constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default constructNow;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n","import { constructFrom } from \"../../constructFrom.js\";\nimport { transpose } from \"../../transpose.js\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n\n  constructor(context, reference) {\n    super();\n    this.context = context || ((date) => constructFrom(reference, date));\n  }\n\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, this.context));\n  }\n}\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam InputDate - The input `Date` type derived from the passed argument.\n * @typeParam ResultDate - The result `Date` type derived from the passed constructor.\n *\n * @param date - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(date, constructor) {\n  const date_ = isConstructor(constructor)\n    ? new constructor(0)\n    : constructFrom(constructor, 0);\n  date_.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n  date_.setHours(\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds(),\n    date.getMilliseconds(),\n  );\n  return date_;\n}\n\nfunction isConstructor(constructor) {\n  return (\n    typeof constructor === \"function\" &&\n    constructor.prototype?.constructor === constructor\n  );\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n","import { ValueSetter } from \"./Setter.js\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n","export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.js\";\n\nimport { numericPatterns } from \"./constants.js\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.js\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { addDays } from \"./addDays.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const date_ = toDate(date, options?.in);\n  const currentDay = date_.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(date_, diff, options);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n","import { addDays } from \"./addDays.js\";\nimport { getISODay } from \"./getISODay.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setISODay} function options.\n */\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday, etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day, options) {\n  const date_ = toDate(date, options?.in);\n  const currentDay = getISODay(date_, options);\n  const diff = day - currentDay;\n  return addDays(date_, diff, options);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISODay} function options.\n */\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date, options) {\n  const day = toDate(date, options?.in).getDay();\n  return day === 0 ? 7 : day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n","import { EraParser } from \"./parsers/EraParser.js\";\nimport { YearParser } from \"./parsers/YearParser.js\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.js\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.js\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.js\";\nimport { QuarterParser } from \"./parsers/QuarterParser.js\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.js\";\nimport { MonthParser } from \"./parsers/MonthParser.js\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.js\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.js\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.js\";\nimport { DateParser } from \"./parsers/DateParser.js\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.js\";\nimport { DayParser } from \"./parsers/DayParser.js\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.js\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.js\";\nimport { ISODayParser } from \"./parsers/ISODayParser.js\";\nimport { AMPMParser } from \"./parsers/AMPMParser.js\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.js\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.js\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.js\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.js\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.js\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.js\";\nimport { MinuteParser } from \"./parsers/MinuteParser.js\";\nimport { SecondParser } from \"./parsers/SecondParser.js\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.js\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.js\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.js\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.js\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n","import { Parser } from \"../Parser.js\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { getWeekYear } from \"../../../getWeekYear.js\";\n\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { startOfISOWeek } from \"../../../startOfISOWeek.js\";\nimport { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigitsSigned } from \"../utils.js\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigitsSigned } from \"../utils.js\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigits } from \"../utils.js\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigits } from \"../utils.js\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setWeek } from \"../../../setWeek.js\";\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getWeek } from \"./getWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const date_ = toDate(date, options?.in);\n  const diff = getWeek(date_, options) - week;\n  date_.setDate(date_.getDate() - diff * 7);\n  return toDate(date_, options?.in);\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n","import { setISOWeek } from \"../../../setISOWeek.js\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getISOWeek } from \"./getISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setISOWeek} function options.\n */\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The `Date` type of the context function.\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week, options) {\n  const _date = toDate(date, options?.in);\n  const diff = getISOWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.js\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setISODay } from \"../../../setISODay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.trunc(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseAnyDigitsSigned } from \"../utils.js\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseAnyDigitsSigned } from \"../utils.js\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getDefaultOptions } from \"./getDefaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\nimport { DateTimezoneSetter } from \"./parse/_lib/Setter.js\";\nimport { parsers } from \"./parse/_lib/parsers.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangeably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const invalidDate = () => constructFrom(options?.in || referenceDate, NaN);\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (!formatStr)\n    return dateStr ? invalidDate() : toDate(referenceDate, options?.in);\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will try to use the context or\n  // the reference date and fallback to the system time zone.\n  const setters = [new DateTimezoneSetter(options?.in, referenceDate)];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return invalidDate();\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return invalidDate();\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return invalidDate();\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate, options?.in);\n\n  if (isNaN(+date)) return invalidDate();\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return invalidDate();\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return date;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.js\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","\nimport { format, isToday, isThisWeek, parseISO, startOfWeek, endOfWeek, parse } from \"date-fns\";\nimport 'boxicons';\n\nexport class TaskHandler {\n    constructor() {\n        this.format = format;\n        this.isToday = isToday;\n        this.startOfWeek = startOfWeek;\n        this.endOfWeek = endOfWeek;\n        this.parse = parse;\n        this.isTaskCompleted = false;\n\n        // DOM ELEMENTS\n        this.addTaskBtn = document.getElementById('addTaskBtn');\n        this.taskModal = document.getElementById('taskModal');\n        this.closeModalBtn = document.getElementById('closeModalBtn');\n        this.taskForm = document.getElementById('taskForm');\n        this.todoList = document.getElementById('todoList');\n        this.currentTaskEl = document.getElementById('currentTaskHead');\n        this.taskBtn = document.getElementById('taskBtn');\n        this.msgContainer = document.getElementsByClassName('message-notif-content')[0];\n\n        // Side nav buttons\n        this.allTasksBtn = document.getElementById('allTasksBtn');\n        this.todaysTasksBtn = document.getElementById('todaysTasksBtn');\n        this.weekTasksBtn = document.getElementById('weekTasksBtn');\n        this.importantTasksBtn = document.getElementById('importantTasksBtn');\n        this.completedTaskBtn = document.getElementById('completedTaskBtn');\n\n        // Initialize tasks local storage\n        this.tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n        if (this.tasks.length === 0) {\n            this.tasks.push({\n                id: 1, // Assign a fixed ID\n                title: \"Default Task\",\n                description: \"This is a default task\",\n                dueDate: this.format(new Date(), 'MM/dd/yyyy'), // Today's date\n                isImportant: true,\n                markAsDone: false\n            });\n            this.saveTasksToLocalStorage(); // Save the updated tasks array\n        }   \n        // Bind event listeners\n        this.addEventListeners();\n\n        // Initial render\n        this.renderTasks();\n    }\n    addEventListeners() {\n        this.addTaskBtn.addEventListener('click', () => {\n            this.openModal();\n            this.taskBtn.innerText = \"Add Task\"; // Reset to \"Add Task\"\n            this.taskForm.onsubmit = this.addTaskHandler; // Restore \"Add Task\" functionality\n        });\n\n        this.closeModalBtn.addEventListener('click', () => this.closeModal());\n        this.allTasksBtn.addEventListener('click', () => this.filterAllTasks());\n        this.todaysTasksBtn.addEventListener('click', () => this.filterTodaysTasks());\n        this.weekTasksBtn.addEventListener('click', () => this.filterWeekTasks());\n        this.importantTasksBtn.addEventListener('click', () => this.filterImportantTasks());\n        this.completedTaskBtn.addEventListener('click', () => this.filterCompletedTask());\n\n        // \"Add Task\" logic\n        this.addTaskHandler = (e) => {\n            e.preventDefault();\n            const title = document.getElementById('title').value;\n            const description = document.getElementById('description').value;\n            const dueDate = document.getElementById('dueDate').value;\n            const isImportant = document.getElementById('isImportant').checked;\n            const markAsDoneBtn = document.getElementById('markAsDoneBtn');\n            if (dueDate) {\n                this.addTask(title, description, dueDate, isImportant, markAsDoneBtn);\n                this.closeModal();\n                this.taskForm.reset();\n            }\n\n        };\n\n        // Assigning the \"Add Task\" logic\n        this.taskForm.onsubmit = this.addTaskHandler;\n    }\n\n    openModal() {\n        this.taskModal.style.display = 'flex';\n    }\n    closeModal() {\n        this.taskModal.style.display = 'none';\n    }\n    saveTasksToLocalStorage() {\n        localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    }\n    addTask(title, description, dueDate, isImportant, markAsDone) {\n        const task = {\n            id: Date.now(),\n            title,\n            description,\n            dueDate: this.format(new Date(dueDate), 'MM/dd/yyyy'),\n            isImportant: isImportant || false,\n            markAsDone: this.isTaskCompleted\n        };\n        this.tasks.push(task);\n        this.msNotif(\"added-task-msg\", \"+ Added to the task. \");\n        this.saveTasksToLocalStorage();\n        this.renderTasks();\n    }\n    msNotif(name, msg) {\n        this.msgContainer.innerHTML = `\n         <div class=\"msg-notif-text ${name}\">${msg}</div>\n      `;\n        setTimeout(() => {\n            this.msgContainer.innerHTML = '';\n        }, 3000);\n    }\n\n    renderTasks(filteredTasks = this.tasks) {\n        this.todoList.innerHTML = '';\n\n        filteredTasks.forEach((task) => {\n            const li = document.createElement('li');\n            li.dataset.id = task.id; // Add a data-id attribute for identification\n            li.innerHTML = `\n                <div>\n                    <h3 id=\"taskTitle\" class=\"${task.markAsDone ? \"taskCompleted\" : \"\"}\">${task.title}</h3>\n                    <p class=\"${task.markAsDone ? \"taskCompleted\" : \"\"}\">${task.description}</p>\n                    <p class=\"${task.markAsDone ? \"taskCompleted\" : \"\"}\">Due: ${task.dueDate}</p>\n                    ${task.isImportant ? '<strong>Important</strong>' : ''}\n                    <br>\n                    <sub id=\"markAsDoneBtn\">${task.markAsDone ? 'Not completed' : 'Mark as completed'}</sub>\n                </div>\n                <div class=\"button-task-container\">\n                    <button class=\"edit-btn btn\"><i class='bx bxs-pencil'></i></button>\n                    <button class=\"delete-btn btn\"><i class='bx bxs-trash' ></i></button>\n                </div>\n            `;\n            this.todoList.appendChild(li);\n            this.currentTaskEl.textContent = this.allTasksBtn.textContent;\n\n        });\n\n        // Attach the event listener to the todoList\n        this.todoList.addEventListener('click', (event) => {\n            const taskId = event.target.closest('li')?.dataset.id;\n            if (!taskId) return;\n\n            if (event.target.classList.contains('edit-btn')) {\n                this.editTask(parseInt(taskId));\n            } else if (event.target.classList.contains('delete-btn')) {\n                this.deleteTask(parseInt(taskId));\n\n\n            }\n            const markAsDoneBtn = document.querySelectorAll('#markAsDoneBtn');\n            markAsDoneBtn.forEach(btn => {\n                btn.onclick = event => {\n                    const taskId = event.target.parentElement.parentElement.dataset.id;\n                    this.isTaskDone(parseInt(taskId));\n                }\n            });\n        });\n    }\n    isTaskDone(id) {\n        const task = this.tasks.find(task => task.id === id);\n        if (task) {\n            task.markAsDone = !task.markAsDone;\n            this.renderTasks();\n            this.saveTasksToLocalStorage();\n        }\n    }\n    editTask(id) {\n        const task = this.tasks.find((t) => t.id === id);\n        if (task) {\n\n            document.getElementById('title').value = task.title;\n            document.getElementById('description').value = task.description;\n            document.getElementById('dueDate').value = this.format(new Date(task.dueDate), 'yyyy-MM-dd');\n            document.getElementById('isImportant').checked = task.isImportant;\n\n            this.openModal();\n            this.taskBtn.innerText = \"Update\"; // Indicate update mode\n\n            // Temporarily override \"Add Task\" logic\n            this.taskForm.onsubmit = (e) => {\n                e.preventDefault();\n                task.title = document.getElementById('title').value;\n                task.description = document.getElementById('description').value;\n                task.dueDate = this.format(new Date(document.getElementById('dueDate').value), 'MM/dd/yyyy');\n                task.isImportant = document.getElementById('isImportant').checked;\n\n                this.saveTasksToLocalStorage();\n                this.renderTasks();\n                this.closeModal();\n                this.taskForm.reset();\n\n                // Once close Restore \"Add Task\" functionality\n                this.taskForm.onsubmit = this.addTaskHandler;\n                this.taskBtn.innerText = \"Add Task\"; // Reset button text\n                this.msNotif(\"updated-task-msg\", \"Task updated. \");\n            };\n        }\n    }\n\n    deleteTask(id) {\n        this.tasks = this.tasks.filter((task) => task.id !== id);\n        this.saveTasksToLocalStorage();\n        this.renderTasks();\n        this.msNotif(\"deleted-task-msg\", \"<i class='bx bxs-trash'></i> Deleted to the task. \");\n    }\n\n    filterAllTasks() {\n        this.renderTasks();\n        this.currentTaskEl.textContent = this.allTasksBtn.textContent;\n    }\n    filterTodaysTasks() {\n        const todaysTasks = this.tasks.filter((task) => {\n            const taskDate = this.parse(task.dueDate, 'MM/dd/yyyy', new Date());\n            return this.isToday(taskDate);\n        });\n        this.renderTasks(todaysTasks);\n        this.currentTaskEl.textContent = this.todaysTasksBtn.textContent;\n    }\n    filterWeekTasks() {\n        const startOfCurrentWeek = this.startOfWeek(new Date(), { weekStartsOn: 1 });\n        const endOfCurrentWeek = this.endOfWeek(new Date(), { weekStartsOn: 1 });\n\n        const weekTasks = this.tasks.filter((task) => {\n            const taskDate = this.parse(task.dueDate, 'MM/dd/yyyy', new Date());\n            return taskDate >= startOfCurrentWeek && taskDate <= endOfCurrentWeek;\n        });\n\n        this.renderTasks(weekTasks);\n        this.currentTaskEl.textContent = this.weekTasksBtn.textContent;\n    }\n    filterImportantTasks() {\n        const importantTasks = this.tasks.filter((task) => task.isImportant);\n        this.renderTasks(importantTasks);\n        this.currentTaskEl.textContent = this.importantTasksBtn.textContent;\n    }\n    filterCompletedTask() {\n        const completedTask = this.tasks.filter((task) => task.isTaskCompleted);\n        this.renderTasks(completedTask);\n        this.currentTaskEl.textContent = this.completedTaskBtn.textContent;\n    }\n\n}\nconst todoApp = new TaskHandler();\n","import { TaskHandler } from \"../taskManager/tasks\";\nexport class ProjectManager {\n    constructor() {\n        // DOM ELEMENT\n        this.projectPopupContainer = document.getElementsByClassName('project-popup-container')[0];\n        this.projectPopupBtn = document.getElementById('project-popupBtn');\n        this.closeProjectPopupBtn = document.getElementById('closeProjectPopupBtn');\n        this.projectInput = document.getElementById('projectInput');\n        this.addProject = document.getElementById('addProjectBtn');\n        this.projectList = document.getElementsByClassName('project-lists')[0];\n        this.projectForm = document.getElementById('taskForm');\n        this.projectModal = document.getElementById('taskModal');\n\n        // project local storage\n        this.projects = JSON.parse(localStorage.getItem('projects')) || [];\n        if (this.projects.length === 0) {\n            this.projects.push({\n                id: 123, // Assign a fixed ID\n                projectTitle: \"Default Project\",\n            });\n            this.saveProjectToLocalStorage(); // Save the updated tasks array\n        }   \n        // Bind Event listener\n        this.addEventListeners();\n\n        // render project\n        this.renderProjects();\n\n\n    }\n    addEventListeners() {\n        this.projectPopupBtn.addEventListener('click', () => this.openProjectPopup());\n        this.closeProjectPopupBtn.addEventListener('click', () => this.closeProjectPopup());\n        this.addProject.addEventListener('click', () => this.saveNewProject());\n\n        this.projectForm.onsubmit = (e) => {\n            e.preventDefault();\n            const title = document.getElementById('title').value;\n            const description = document.getElementById('description').value;\n            const dueDate = document.getElementById('dueDate').value;\n            const isImportant = document.getElementById('isImportant').checked;\n            const projectTask = new TaskHandler();\n\n            if (dueDate) {\n                projectTask.addTask(title, description, dueDate, isImportant);\n                projectTask.closeModal();\n                this.projectForm.reset();\n            }\n        };\n    }\n    openProjectPopup() {\n        this.projectPopupContainer.style.display = 'block';\n    }\n    closeProjectPopup() {\n        this.projectPopupContainer.style.display = 'none';\n    }\n    saveProjectToLocalStorage() {\n        localStorage.setItem('projects', JSON.stringify(this.projects));\n    }\n    saveNewProject(projectTitle) {\n        const projectTask = new TaskHandler();\n        projectTitle = this.projectInput.value.trim();\n        if (projectTitle === '') return alert('Please enter a new project.');\n        const projectList = {\n            id: Date.now(),\n            projectTitle\n        }\n        this.projects.push(projectList);\n        this.saveProjectToLocalStorage();\n        this.renderProjects();\n        this.projectInput.value = \"\";\n        this.closeProjectPopup();\n        projectTask.msNotif(\"added-task-msg\", \"+ Added new project. \")\n    }\n    renderProjects() {\n        this.projectList.innerHTML = \"\";\n        const currentProject = this.projects;\n\n        currentProject.forEach(project => {\n            const newProject = document.createElement('div');\n            const maxLength = 25;\n            const truncatedTitle = project.projectTitle.length > maxLength\n                ? project.projectTitle.substring(0, maxLength) + '...'\n                : project.projectTitle;\n            newProject.className = \"project-list\";\n            newProject.innerHTML = `\n                        <span id=\"project-title\" data-id='${project.id}'><i class='bx bxs-rocket'></i>${truncatedTitle}</span>\n                        <button class='project-list-btn btn' id='deleteProjectBtn'><i class='bx bxs-trash'></i></button>\n            `;\n            this.projectList.appendChild(newProject);\n        });\n        const projectListBtn = document.querySelectorAll('#project-title');\n        projectListBtn.forEach((btn) => {\n            btn.addEventListener('click', (event) => {\n                const projectId = event.target.dataset.id;\n                this.openProjectForm(projectId);\n            });\n        });\n        const deleteProjectBtn = document.querySelectorAll('#deleteProjectBtn');\n        deleteProjectBtn.forEach((btn, index) => {\n            btn.addEventListener('click', () => this.deleteProject(index));\n        });\n    }\n    openProjectForm(id) {\n\n        const project = this.projects.find((t) => t.id === parseInt(id));\n        if (project) {\n            document.getElementById('title').value = project.projectTitle;\n            this.projectModal.style.display = 'flex';\n        }\n    }\n    deleteProject(index) {\n        this.projects.splice(index, 1);\n        this.saveProjectToLocalStorage();\n        this.renderProjects();\n    }\n}\nconst projectApp = new ProjectManager();"],"names":["t","e","n","r","o","AWAITING_WEB_COMPONENTS_POLYFILL","then","a","f","i","WEB_COMPONENTS_POLYFILL","s","ES6_CORE_POLYFILL","c","isDone","exec","splice","forEach","push","createElement","type","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","window","document","exports","l","call","m","d","Object","defineProperty","enumerable","get","Symbol","toStringTag","value","__esModule","create","bind","default","prototype","hasOwnProperty","p","toString","this","map","btoa","unescape","encodeURIComponent","JSON","stringify","sources","sourceRoot","concat","join","length","g","iterator","constructor","u","configurable","writable","key","getPrototypeOf","__proto__","setPrototypeOf","Reflect","construct","apply","arguments","b","y","h","ShadyCSS","innerHTML","TypeError","ReferenceError","$ui","attachShadow","mode","ownerDocument","importNode","content","styleElement","_state","$iconHolder","getElementById","getAttribute","HTMLElement","cdnUrl","Promise","XMLHttpRequest","addEventListener","status","Error","responseText","onerror","onabort","open","send","tagName","prepareTemplate","customElements","define","textContent","currentName","getIconSvg","catch","console","error","style","fill","size","width","height","sizeType","test","trim","classList","remove","add","module","___CSS_LOADER_EXPORT___","id","cssWithMappingToString","list","item","needLayer","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","base64","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","api","domAPI","update","newObj","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","getTarget","element","setAttributes","attributes","nonce","setAttribute","insertStyleElement","styleTagTransform","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","prop","nc","locals","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","findIndex","object","findKey","valueCallback","rest","slice","parsePattern","parseInt","parseResult","any","enUS","code","formatDistance","token","tokenValue","replace","addSuffix","comparison","formatRelative","_date","_baseDate","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","constructFromSymbol","for","constructFrom","Date","toDate","argument","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","normalizeDates","dates","normalize","find","startOfDay","in","setHours","getDayOfYear","laterDate","earlierDate","laterDate_","earlierDate_","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","differenceInCalendarDays","date_","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","signedYear","M","dayPeriodEnumValue","toUpperCase","H","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","isoDayOfWeek","toLowerCase","hours","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","subject","message","warn","includes","RangeError","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","originalDate","parts","substring","firstCharacter","longFormatter","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","formatter","matched","isToday","dateLeft_","dateRight_","isSameDay","now","constructNow","endOfWeek","Setter","subPriority","validate","_utcDate","ValueSetter","validateValue","setValue","priority","super","set","flags","DateTimezoneSetter","reference","timestampIsSet","isConstructor","transpose","Parser","run","dateString","parse","setter","_value","numericPatterns","timezonePatterns","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","isLeapYearIndex","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","addDays","amount","NaN","setDay","currentDay","delta","setISODay","getISODay","parsers","incompatibleTokens","isTwoDigitYear","normalizedTwoDigitYear","_flags","firstWeekOfYear","setMonth","setWeek","setISOWeek","isLeapYear","subpriority","wholeWeekDays","floor","isPM","setMinutes","setSeconds","setMilliseconds","notWhitespaceRegExp","dateStr","referenceDate","invalidDate","assign","subFnOptions","setters","tokens","usedTokens","parser","incompatibleToken","usedToken","fullToken","indexOf","uniquePrioritySetters","sort","filter","setterArray","TaskHandler","isTaskCompleted","addTaskBtn","taskModal","closeModalBtn","taskForm","todoList","currentTaskEl","taskBtn","msgContainer","getElementsByClassName","allTasksBtn","todaysTasksBtn","weekTasksBtn","importantTasksBtn","completedTaskBtn","tasks","localStorage","getItem","title","description","dueDate","isImportant","markAsDone","saveTasksToLocalStorage","addEventListeners","renderTasks","openModal","innerText","onsubmit","addTaskHandler","closeModal","filterAllTasks","filterTodaysTasks","filterWeekTasks","filterImportantTasks","filterCompletedTask","preventDefault","checked","markAsDoneBtn","addTask","reset","display","setItem","task","msNotif","name","msg","setTimeout","filteredTasks","li","dataset","event","taskId","closest","contains","editTask","deleteTask","querySelectorAll","btn","onclick","parentElement","isTaskDone","todaysTasks","taskDate","startOfCurrentWeek","endOfCurrentWeek","weekTasks","importantTasks","completedTask","projectPopupContainer","projectPopupBtn","closeProjectPopupBtn","projectInput","addProject","projectList","projectForm","projectModal","projects","projectTitle","saveProjectToLocalStorage","renderProjects","openProjectPopup","closeProjectPopup","saveNewProject","projectTask","alert","project","newProject","truncatedTitle","className","projectId","openProjectForm","deleteProject"],"sourceRoot":""}